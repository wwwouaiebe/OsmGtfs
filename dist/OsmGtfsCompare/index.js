/**
 * 
 * @source: https://github.com/wwwouaiebe/OsmGtfs
 * 
 * @licstart  The following is the entire license notice for the
 * JavaScript code in this page.
 * 
 * OsmGtfs - version 3.0.0
 * Build 00438 - 2025-09-14T09:13:00+0200 
 * Copyright 2024 2025 wwwouaiebe 
 * Contact: https://www.ouaie.be/
 * License: GPL-3.0
 * 
 * The JavaScript code in this page is free software: you can
 * redistribute it and/or modify it under the terms of the GNU
 * General Public License (GNU GPL) as published by the Free Software
 * Foundation, either version 3 of the License, or (at your option)
 * any later version.  The code is distributed WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE.  See the GNU GPL for more details.
 * 
 * As additional permission under GNU GPL version 3 section 7, you
 * may distribute non-source (e.g., minimized or compacted) forms of
 * that code without the copy of the GNU GPL normally required by
 * section 4, provided you include this license notice and a URL
 * through which recipients can access the Corresponding Source.
 * 
 * @licend  The above is the entire license notice
 * for the JavaScript code in this page.
 * 
 */


!function(){"use strict";class t{#t;constructor(t){Object.freeze(this),this.#t=t}handleEvent(){this.#t.toggle(!0)}}class e{#t;constructor(t){Object.freeze(this),this.#t=t}handleEvent(){this.#t.onPreferedThemeChange()}}class r{#t;constructor(t){Object.freeze(this),this.#t=t}handleEvent(){this.#t.onStorageChange()}}new class{#e;#r;#s;#o(t){try{const e=window[t],r="__storage_test__";return e.setItem(r,r),e.removeItem(r),!0}catch{return!1}}#a(){this.#e=window.matchMedia("(prefers-color-scheme: light)").matches?"light":"dark",this.#s&&(this.#e=localStorage.getItem("preferedTheme")||this.#e),document.body.classList.remove("cyDark"),document.body.classList.remove("cyLight"),document.body.classList.add("dark"===this.#e?"cyDark":"cyLight"),"dark"===this.#e?this.#i():this.#n()}#i(){this.#r.innerText="☼",this.#r.title="Apparence: clair",this.#r.alt="Apparence: clair"}#n(){this.#r.innerText="☽",this.#r.title="Apparence: sombre",this.#r.alt="Apparence: sombre"}constructor(){Object.freeze(this),window.matchMedia("(prefers-color-scheme: light)").addEventListener("change",new e(this)),window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",new e(this)),this.#s=this.#o("localStorage"),this.#s&&window.addEventListener("storage",new r(this)),this.#r=document.getElementById("cyDarkLight"),this.#r&&this.#r.addEventListener("click",new t(this)),this.#a()}onPreferedThemeChange(){this.#s&&localStorage.removeItem("preferedTheme"),this.#a()}onStorageChange(){const t=localStorage.getItem("preferedTheme");t&&t!==this.#e&&this.toggle(!1)}toggle(t){"dark"===this.#e?(this.#e="light",document.body.classList.remove("cyDark"),document.body.classList.add("cyLight"),this.#n()):(this.#e="dark",document.body.classList.remove("cyLight"),document.body.classList.add("cyDark"),this.#i()),this.#s&&t&&localStorage.setItem("preferedTheme",this.#e)}};const s=new class{#h;#m="";#l="";#d="";get operator(){return this.#h}get network(){return this.#m}get vehicle(){return this.#l}#c;get gtfsType(){return this.#c}get ref(){return this.#d}loadData(){switch(this.#h=document.getElementById("osmOperatorSelect").value,this.#m=document.getElementById("osmNetworkSelect").value,this.#l=document.getElementById("osmVehicleSelect").value,this.#d=document.getElementById("osmRef").value,this.#l){case"tram":this.#c=0;break;case"subway":this.#c=1;break;case"bus":this.#c=3}}constructor(){Object.freeze(this)}};class o{#u;#f;#p;#d;#g=[];#w;#v;#E;#R;#y=[];#M;#h;#O;get name(){return this.#u}get from(){return this.#f}get to(){return this.#p}get ref(){return this.#d}get platforms(){return this.#g}get shapePk(){return this.#w}get startDate(){return this.#v}get endDate(){return this.#E}get nodes(){return this.#R}get ways(){return this.#y}get osmId(){return this.#M}get osmType(){return"relation"}get operator(){return this.#h}get fixme(){return this.#O}get jsonObject(){const t={name:this.#u,from:this.#f,to:this.#p,ref:this.#d,platforms:[],shapePk:this.#w,startDate:this.#v,endDate:this.#E,nodes:this.#R,ways:this.#y,osmId:this.#M,operator:this.#h,fixme:this.#O};return this.#g.forEach(e=>t.platforms.push(e)),Object.freeze(t.platforms),Object.freeze(t)}constructor(t){Object.freeze(this),this.#u=t.name,this.#f=t.from,this.#p=t.to,this.#d=t.ref,this.#g=t.platforms,this.#w=t.shapePk,this.#v=t.startDate,this.#E=t.endDate,this.#R=t.nodes,this.#y=t.ways,this.#M=t.osmId,this.#h=t.operator,this.#O=t.fixme}}class a{#u;#k;#d;#b;#P=[];#M;#h;#O;get name(){return this.#u}get description(){return this.#k}get ref(){return this.#d}get type(){return this.#b}get routes(){return this.#P}get osmId(){return this.#M}get osmType(){return"relation"}get operator(){return this.#h}get fixme(){return this.#O}get jsonObject(){const t={description:this.#k,ref:this.#d,type:this.#b,routes:[],osmId:this.#M,operator:this.#h,fixme:this.#O,name:this.#u};return this.#P.forEach(e=>{t.routes.push(e.jsonObject)}),Object.freeze(t.routes),Object.freeze(t)}constructor(t){Object.freeze(this),this.#k=t.description,this.#d=t.ref,this.#b=Number.parseInt(t.type),this.#P=[];for(const e of t.routes)this.routes.push(new o(e));this.#M=t.osmId,this.#h=t.operator,this.#O=t.fixme,this.#u=t.name}}class i{#T=[];get routesMaster(){return this.#T}get jsonObject(){const t={routesMaster:[]};return this.#T.forEach(e=>{t.routesMaster.push(e.jsonObject)}),Object.freeze(t.routesMaster),Object.freeze(t)}setJsonRoutesMaster(t,e){this.#T=[];for(const r of t)void 0!==e&&r.type!==e||this.#T.push(new a(r))}setRoutesMaster(t){this.#T=t}constructor(){Object.freeze(this)}}const n=new i;class h{async loadData(t){let e=null;return await fetch(t).then(t=>{if(t.ok)return t.json();console.error(String(t.status)+" "+t.statusText)}).then(t=>{e=t}).catch(t=>{console.error(t)}),e}constructor(){}}const m=new class{#D={};get mySqlDbName(){return this.#D.mySqlDbName}get gtfsDirectory(){return this.#D.gtfsDirectory}get jsonDirectory(){return this.#D.jsonDirectory}get operator(){return this.#D.operator}get osmOperator(){return this.#D.osmOperator}get networks(){return this.#D.networks}async loadData(t){return this.#D=await(new h).loadData(t),!!this.#D&&(this.#D.networks.forEach(t=>Object.freeze(t)),Object.freeze(this.#D.networks),!0)}constructor(){Object.freeze(this)}};class l{#b;get type(){return this.#b}#O;get fixme(){return this.#O}#S;get lat(){return this.#S}#x;get lon(){return this.#x}#u;get name(){return this.#u}#I;get nameOperator(){return this.#I}#m;get network(){return this.#m}#h;get operator(){return this.#h}#N;get gtfsRef(){return this.#N}#L;get osmRefs(){return this.#L}#j;get routeRefs(){return this.#j}#B;get zone(){return this.#B}#M;get osmId(){return this.#M}#z;get osmType(){return this.#z}constructor(t){this.#b=t.type,this.#O=t.fixme,this.#S=t.lat,this.#x=t.lon,this.#u=t.name,this.#I=t.nameOperator,this.#m=t.network,this.#h=t.operator,this.#N=t.gtfsRef,this.#L=t.osmRefs,this.#j=t.routeRefs,this.#B=t.zone,this.#M=t.osmId,this.#z=t.osmType,Object.freeze(this)}}const d=new class{#g=new Map;get platforms(){return this.#g}getPlatform(t){return this.#g.get(t)}loadData(t){this.#g=new Map;const e={};t.forEach(t=>{e.type=t.type,e.lat=t.lat,e.lon=t.lon,e.nameOperator=t.nameOperator,e.network=t.network,e.operator=m.operator,e.zone=t.zone,e.routeRefs={},m.networks.forEach(r=>{const s=t["routeRef_"+r.osmNetwork];s&&(e.routeRefs[r.osmNetwork]=s)}),e.gtfsRef=t.gtfsRef,t.type===s.gtfsType&&this.#g.set(t.gtfsRef,new l(e))}),Object.freeze(this.#g)}constructor(){Object.freeze(this),Object.freeze(this.#g)}};class c{report;constructor(){}getJosmEdit(t,e){if(!t?.osmId||!t?.osmType)return"";let r='<button title="Edit the relation with JOSM\nJOSM must be already opened!" class="josmButton" data-osm-obj-id="'+t.osmId+'" data-osm-obj-type="'+t.osmType+'" ';if(e){let t=1;for(const[s,o]of Object.entries(e))r+="data-tag-"+t+'="'+s+"="+o+'" ',t++}return r+=">JOSM </button>",r}getOsmLink(t){return t?.osmId&&t?.osmType?'<a target="_blank" href="https://www.openstreetmap.org/'+t.osmType+"/"+t.osmId+'"> '+t.osmType+" : "+t.osmId+"</a>":""}add(t,e,r,s){const o=document.createElement(t);o.innerHTML=e+this.getOsmLink(r)+this.getJosmEdit(r,s),this.report.appendChild(o)}open(){for(;this.report.firstChild;)this.report.removeChild(this.report.firstChild)}close(){}}const u=new class extends c{#A={routesMaster:{operator:0,fixme:0,name:0,description:0,members:0,refs:0,sameRefs:0,errors:0,warnings:0,fixme:0,isUnknown:0,routeNoRouteMaster:0},routes:{operator:0,fixme:0,holes:0,ways:0,fromToRefName:0,doneNoGtfs:0,doneError:0,doneOk:0,toDo:0,errors:0,warnings:0},platforms:{warnings:0,errors:0,name:0,nameOperator:0,fixme:0,network:0,operator:0,routeRefs:0,zone:0}};#F(){Object.keys(this.#A.routesMaster).forEach(t=>{this.#A.routesMaster[t]=0}),Object.keys(this.#A.routes).forEach(t=>{this.#A.routes[t]=0}),Object.keys(this.#A.platforms).forEach(t=>{this.#A.platforms[t]=0})}addRouteMasterErrorSameRefs(){this.#A.routesMaster.errors++,this.#A.routesMaster.sameRefs++}addRouteMasterErrorRefs(){this.#A.routesMaster.errors++,this.#A.routesMaster.refs++}addRouteMasterErrorMembers(){this.#A.routesMaster.errors++,this.#A.routesMaster.members++}addRouteMasterErrorName(){this.#A.routesMaster.errors++,this.#A.routesMaster.name++}addRouteMasterErrorDescription(){this.#A.routesMaster.errors++,this.#A.routesMaster.description++}addRouteMasterErrorOperator(){this.#A.routesMaster.errors++,this.#A.routesMaster.operator++}addRouteMasterErrorIsUnknown(){this.#A.routesMaster.errors++,this.#A.routesMaster.isUnknown++}addErrorRouteNoRouteMaster(){this.#A.routesMaster.errors++,this.#A.routesMaster.routeNoRouteMaster++}addRouteMasterWarningFixme(){this.#A.routesMaster.warnings++,this.#A.routesMaster.fixme++}addRouteErrorOperator(){this.#A.routes.errors++,this.#A.routes.operator++}addRouteWarningFixme(){this.#A.routes.warnings++,this.#A.routes.fixme++}addRouteErrorHoles(){this.#A.routes.errors++,this.#A.routes.holes++}addRouteErrorWays(){this.#A.routes.errors++,this.#A.routes.ways++}addRouteDoneNoGtfs(){this.#A.routes.doneNoGtfs++,this.#A.routes.errors++}addRouteErrorFromToRefName(){this.#A.routes.fromToRefName++,this.#A.routes.errors++}addRouteDoneOk(){this.#A.routes.doneOk++}addRouteDoneError(){this.#A.routes.doneError++}addRouteToDo(t){this.#A.routes.toDo+=t||1}addRouteValidationError(){this.#A.routes.validationErrors++}addRouteValidationWarning(){this.#A.routes.validationWarnings++}addPlatformsErrorName(){this.#A.platforms.errors++,this.#A.platforms.name++}addPlatformsErrorNameOperator(){this.#A.platforms.errors++,this.#A.platforms.nameOperator++}addPlatformsWarningFixme(){this.#A.platforms.warnings++,this.#A.platforms.fixme++}addPlatformsErrorNetwork(){this.#A.platforms.errors++,this.#A.platforms.network++}addPlatformsErrorOperator(){this.#A.platforms.errors++,this.#A.platforms.operator++}addPlatformsErrorRouteRefs(){this.#A.platforms.errors++,this.#A.platforms.routeRefs++}addPlatformsErrorZone(){this.#A.platforms.errors++,this.#A.platforms.zone++}constructor(){super(),this.report=document.getElementById("statsPane"),Object.freeze(this),Object.seal(this.#A),Object.seal(this.#A.routesMaster),Object.seal(this.#A.routes),Object.seal(this.#A.platforms)}open(){super.open(),this.#F()}close(){this.add("h1","Stats :"),this.add("h2","Routes master"),this.add("p","Osm routes master with errors on operator tag: "+this.#A.routesMaster.operator),this.add("p","Osm routes master with fixme tag: "+this.#A.routesMaster.fixme),this.add("p","Osm routes master with errors on name tag: "+this.#A.routesMaster.name),this.add("p","Osm routes master with errors on description tag: "+this.#A.routesMaster.description),this.add("p","Osm routes master with errors on ref tag: "+this.#A.routesMaster.refs),this.add("p","Osm routes master with ref tags of route <> ref tag: "+this.#A.routesMaster.sameRefs),this.add("p","Osm routes master with errors on members: "+this.#A.routesMaster.members),this.add("p","Osm routes withour route master: "+this.#A.routesMaster.routeNoRouteMaster),this.add("p","Unknown Osm routes masters: "+this.#A.routesMaster.isUnknown),this.add("p","Validation errors on routes master to fix: "+this.#A.routesMaster.errors),this.add("p","Validation warnings on routes master nice to fix: "+this.#A.routesMaster.warnings),this.add("h2","Routes"),this.add("p","Osm routes with holes: "+this.#A.routes.holes),this.add("p","Osm routes with invalid ways: "+this.#A.routes.ways),this.add("p","Osm routes with errors on operator: tags "+this.#A.routes.operator),this.add("p","Osm routes with errors on from, to, ref or name tags: "+this.#A.routes.fromToRefName),this.add("p","Osm routes with fixme: "+this.#A.routes.fixme),this.add("p","Osm route relations done and aligned on GTFS files: "+this.#A.routes.doneOk),this.add("p","Osm route relations done but not aligned on GTFS files: "+this.#A.routes.doneError),this.add("p","Osm route relations done but no GTFS data found: "+this.#A.routes.doneNoGtfs),this.add("p","Osm route relations todo: "+this.#A.routes.toDo),this.add("p","Validation errors on routes to fix: "+this.#A.routes.errors),this.add("p","Validation warnings on routes nice to fix: "+this.#A.routes.warnings),this.add("h2","platforms"),this.add("p","Osm platforms with errors on name: "+this.#A.platforms.name),this.add("p","Osm platforms with errors on name:operator: "+m.operator+" :"+this.#A.platforms.nameOperator),this.add("p","Osm platforms with fixme: "+this.#A.platforms.fixme),this.add("p","Osm platforms with errors on operator: "+this.#A.platforms.operator),this.add("p","Osm platforms with errors on network: "+this.#A.platforms.network),this.add("p","Osm platforms with errors on route_ref: "+this.#A.platforms.routeRefs),this.add("p","Osm platforms with errors on zone: "+this.#A.platforms.zone),this.add("p","Validation errors on platforms to fix: "+this.#A.platforms.errors),this.add("p","Validation warnings on platforms nice to fix: "+this.#A.platforms.warnings)}};class f{async loadData(){let t=await(new h).loadData("./dataFiles/json/"+s.operator+"/gtfsData-"+s.network+".json");n.setJsonRoutesMaster(t.routesMasterTree.routesMaster,s.gtfsType),d.loadData(t.platforms);const e=t.startDate;return u.add("h1","GTFS files valid from "+new Date(e).toLocaleDateString("en-BE",{weekday:"long",year:"numeric",month:"long",day:"numeric"})),n.routesMaster.forEach(t=>{t.routes.sort((t,e)=>{const r=d.getPlatform(t.platforms[0]).nameOperator,s=d.getPlatform(e.platforms[0]).nameOperator,o=d.getPlatform(t.platforms.slice(-1)[0]).nameOperator,a=d.getPlatform(e.platforms.slice(-1)[0]).nameOperator,i=r.localeCompare(s),n=o.localeCompare(a);return 0===i?n:i})}),!0}constructor(){Object.freeze(this)}}const p=new i;const g=new class{#C=new Map;get platformsWithMore1ref(){return this.#C}#g=new Map;get platforms(){return this.#g}getPlatform(t){return this.#g.get(t)}#H(t){let e={};return t?.tags?.bus?e.type=3:t?.tags?.tram?e.type=0:t?.tags?.subway&&(e.type=1),e.fixme=t?.tags?.fixme,e.lat=t.lat,e.lon=t.lon,e.name=t?.tags?.name,e.nameOperator=t?.tags["name:operator:"+m.operator],e.network=t?.tags?.network,e.operator=t?.tags?.operator,e.zone=t?.tags["zone:"+m.operator],e.osmId=t.id,e.osmType=t.type,e.routeRefs={},e.osmRefs={},m.networks.forEach(r=>{const s=t?.tags["route_ref:"+r.osmNetwork];s&&(e.routeRefs[r.osmNetwork]=s);const o=t?.tags["ref:"+r.osmNetwork];o&&(e.osmRefs[r.osmNetwork]=o)}),e}loadData(t){this.#g=new Map,this.#C=new Map,t.forEach(t=>{const e=this.#H(t);let r=0,s=null;Object.values(e.osmRefs).forEach(t=>{t.split(";").forEach(t=>{e.gtfsRef=t,s=new l(e),this.#g.set(t,s),r++})}),1<r&&this.#C.set(s.osmId,s)}),Object.freeze(this.#g),Object.freeze(this.#C)}constructor(){}};class w{static compareRouteName(t,e){const r=String(Number.parseInt(t)),s=String(Number.parseInt(e)),o=t.replace(r,""),a=e.replace(s,"");return(r.padStart(5," ")+o).localeCompare(s.padStart(5," ")+a)}}class v{#W=new Map;#U=new Map;#G=new Map;#_=new Map;#V=new Map;#J(){this.#W.clear(),this.#_.clear(),this.#G.clear(),this.#U.clear(),this.#V.clear()}#q(t){let e="";for(const r of m.networks){let s=t?.tags["ref:"+r.osmNetwork];s&&(e+=s+";")}return e.slice(0,-1).split(";")[0]}#X(){const t=["platform","platform_entry_only","platform_exit_only"],e=[];this.#W.forEach(r=>{const s={description:r?.tags?.description,ref:r?.tags.ref,fixme:r?.tags.fixme,operator:r?.tags?.operator,type:["tram","subway","train","bus"].indexOf(r?.tags?.route_master),routes:[],osmId:r.id,name:r?.tags?.name};r.members.forEach(e=>{const r=this.#U.get(e.ref);if(r){const e={name:r?.tags?.name,from:r?.tags?.from,to:r?.tags?.to,ref:r?.tags?.ref,fixme:r?.tags?.fixme,operator:r?.tags?.operator,ways:[],platforms:[],osmId:r.id};r.members.forEach(r=>{""===r.role&&e.ways.push(this.#G.get(r.ref));const s=this.#V.get(r.ref);s&&-1!==t.indexOf(r.role)&&e.platforms.push(this.#q(s))}),s.routes.push(e)}}),s.routes.sort((t,e)=>t.name.localeCompare(e.name)),e.push(s)}),p.setJsonRoutesMaster(e)}#Z(t){const e=[],r=[];t.forEach(t=>{switch(t.tags&&Object.freeze(t.tags),t.members&&Object.freeze(t.members),Object.freeze(t),t.type){case"relation":switch(t.tags.type){case"route_master":r.push(t);break;case"route":this.#U.set(t.id,t)}break;case"way":this.#G.set(t.id,t);break;case"node":this.#_.set(t.id,t)}"platform"===t?.tags?.public_transport&&e.push(t)}),e.sort((t,e)=>t?.tags?.name.localeCompare(e?.tags?.name)),e.forEach(t=>{this.#V.set(t.id,t)}),r.sort((t,e)=>w.compareRouteName(t.tags.ref,e.tags.ref)),r.forEach(t=>{this.#W.set(t.id,t)})}async#K(t){return console.info("Warning: osm dev data are used"),console.info(t),(await(new h).loadData("./dataFiles/devData/devData-"+s.network.toUpperCase()+".json")).elements}async#Q(t){let e=null;return await fetch(t).then(t=>{if(t.ok)return t.json();console.error(String(t.status)+" "+t.statusText)}).then(t=>{e=t.elements}).catch(t=>{console.error(t)}),e}async fetchData(){this.#J();let t='https://lz4.overpass-api.de/api/interpreter?data=[out:json][timeout:40];rel["network"~"'+s.network+'"]["route"="'+s.vehicle+'"]["type"="route"]'+(""===s.ref?"":'["ref"="'+s.ref+'"]')+"->.rou;(.rou <<; - .rou;); >> ->.rm;.rm out;",e=null;e=new URL(window.location).searchParams.get("devData")?await this.#K(t):await this.#Q(t),e&&(this.#Z(e),this.#X(),g.loadData(this.#V))}constructor(){Object.freeze(this)}}const E=new class extends c{constructor(){super(),this.report=document.getElementById("platformsPane"),Object.freeze(this)}};class R{constructor(){Object.freeze(this)}async handleEvent(t){const e=t.target.dataset.osmObjId,r=t.target.dataset.osmObjType;let s="http://localhost:8111/load_object?new_layer="+(document.getElementById("newJosmLayer").checked?"true":"false");switch(r){case"relation":s+="&relation_members=true&objects=r"+e;break;case"node":s+="&objects=n"+e;break;case"way":s+="&objects=w"+e}if(t.target.dataset["tag-1"]){s+="&addtags=";let e=1;for(;t.target.dataset["tag-"+e];)s+=encodeURI(t.target.dataset["tag-"+e]),e++,t.target.dataset["tag-"+e]&&(s+="%7C")}await fetch(s).then(e=>{console.info(String(e.status)+" "+e.statusText),t.target.classList.add("josmButtonVisited")}).catch(t=>{alert(t+"\n\n Are you sure that JOSM is opened and the remote control activated ?\n\nSee: https://josm.openstreetmap.de/wiki/Help/Preferences/RemoteControl")})}}class y{static get#Y(){return.5}static get#$(){return 5}static get#tt(){return 10}static get#et(){return 31}static get#rt(){return 32}static get#st(){return 63}#ot(t){return Math.floor(Math.abs(t)+y.#Y)*(0<=t?1:-1)}#at(t,e,r){const s=this.#ot(t*r),o=this.#ot(e*r);let a=s-o;a<<=1,0>s-o&&(a=~a);let i="";for(;y.#rt<=a;)i+=String.fromCharCode((y.#rt|a&y.#et)+y.#st),a>>=y.#$;return i+=String.fromCharCode(a+y.#st),i}#it;#nt(t){let e=null,r=0,s=0;do{e=t.charCodeAt(this.#it++)-y.#st,s|=(e&y.#et)<<r,r+=y.#$}while(y.#rt<=e);return 1&s?~(s>>1):s>>1}constructor(){Object.freeze(this)}encode(t,e){if(!t.length)return"";const r=e.length,s=Array.from(e,t=>Math.pow(y.#tt,t));let o="";for(let e=0;e<r;e++)o+=this.#at(t[0][e],0,s[e]);for(let e=1;e<t.length;e++){const a=t[e],i=t[e-1];for(let t=0;t<r;t++)o+=this.#at(a[t],i[t],s[t])}return o}decode(t,e){const r=e.length;if(!t||0===t.length)return[];this.#it=0;const s=[],o=Array.from(e,t=>Math.pow(y.#tt,t)),a=new Array(r).fill(0);for(;this.#it<t.length;){const e=new Array(r).fill(0);for(let s=0;s<r;s++)a[s]+=this.#nt(t),e[s]=a[s]/o[s];s.push(e)}return s}}class M{#ht;#mt;#lt;static get#dt(){return"\n"}static get#ct(){return"\n\t"}static get#ut(){return"\n\t\t"}static get#ft(){return"\n\t\t\t"}static get#pt(){return"\n\t\t\t\t"}static get#gt(){return 6}#wt(){this.#lt='<?xml version="1.0"?>'+M.#dt,this.#lt+='<gpx xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xsi:schemaLocation="http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd" version="1.1" creator="TravelNotes">'}#vt(){this.#lt+=M.#dt+"</gpx>"}#Et(t){return t.replaceAll("&","&amp;").replaceAll(/\u0027/g,"&apos;").replaceAll(/"/g,"&quot;").replaceAll(/</g,"&lt;").replaceAll(/>/g,"&gt;")}#Rt(){this.#mt.platforms.forEach((t,e)=>{const r=d.getPlatform(t);this.#lt+=M.#ct+'<wpt lat="'+r.lat+'" lon="'+r.lon+'">'+M.#ut+"<name>"+String(e+1)+" - "+this.#Et(r.nameOperator)+" ( "+this.#Et(r.gtfsRef)+" ) </name>"+M.#ct+"</wpt>"})}#yt(){this.#lt+=M.#ct+"<trk>",this.#lt+=M.#ut+"<name>"+this.#Et(this.#ht)+"</name>",this.#lt+=M.#ut+"<trkseg>";(new y).decode(this.#mt.nodes,[M.#gt,M.#gt]).forEach(t=>{this.#lt+=M.#ft+'<trkpt lat="'+t[0]+'" lon="'+t[1]+'">'+M.#ft+"</trkpt>"}),this.#lt+=M.#ut+"</trkseg>",this.#lt+=M.#ct+"</trk>"}#Mt(t,e){try{const r=e?window.URL.createObjectURL(new File([t],this.#ht+".gpx",{type:e})):URL.createObjectURL(t),s=document.createElement("a");s.setAttribute("href",r),s.setAttribute("download",this.#ht+".gpx"),s.click(),window.URL.revokeObjectURL(r)}catch(t){t instanceof Error&&console.error(t)}}buildGpx(t,e){this.#mt=t,this.#ht=e,this.#wt(),this.#Rt(),this.#yt(),this.#vt(),this.#Mt(this.#lt,"application/xml")}constructor(){Object.freeze(this)}}class O{#Ot(t){const e=Number.parseInt(t);let r=null;return n.routesMaster.forEach(t=>{t.routes.forEach(t=>{t.shapePk===e&&(r=t)})}),r}constructor(){Object.freeze(this)}handleEvent(t){t.target.classList.add("gpxButtonVisited"),(new M).buildGpx(this.#Ot(t.target.dataset.shapePk),t.target.dataset.fileName)}}class k{constructor(){Object.freeze(this)}handleEvent(t){document.getElementById(t.target.dataset.routeMasterLinkDiv).scrollIntoView({behavior:"smooth",block:"start"})}}const b=new class extends c{#kt=null;#bt=null;#Pt=null;#Tt=null;#Dt=document.getElementById("routesLinks");#St="";constructor(){super(),this.report=document.getElementById("relationsPane"),Object.freeze(this)}close(){const t=document.getElementsByClassName("josmButton");for(let e=0;e<t.length;e++)t[e].addEventListener("click",new R);const e=document.getElementsByClassName("gpxButton");for(let t=0;t<e.length;t++)e[t].addEventListener("click",new O);const r=document.getElementsByClassName("busShortcutAnchor");for(let t=0;t<r.length;t++)r[t].addEventListener("click",new k);document.getElementById("waitAnimation").style.visibility="hidden"}open(){super.open(),this.#Dt=document.createElement("div"),this.#Dt.id="routesLinks",this.report.appendChild(this.#Dt),document.getElementById("waitAnimation").style.visibility="visible",this.report.classList.remove("errorsOnly")}#xt(t){if(t){this.#kt=document.getElementById("osm"+t.osmIid),this.#Pt=document.getElementById("osm"+t.osmIid+"DataDiv");const e=document.createElement("span");e.classList.add("busShortcutAnchor"),e.innerText=t.ref+" ",e.dataset.routeMasterLinkDiv="osm"+t.osmId,this.#Dt.appendChild(e)}else this.#kt=null,this.#bt=null;this.#kt||(this.#kt=document.createElement("div"),this.report.appendChild(this.#kt),this.#kt.appendChild(this.#Tt),this.#Pt=document.createElement("div"),this.#kt.appendChild(this.#Pt),t&&(this.#kt.id="osm"+t.osmId,this.#Pt.id="osm"+t.osmId+"DataDiv")),this.#bt=null}#It(t){t?(this.#bt=document.getElementById("osm"+t.osmId),this.#Pt=document.getElementById("osm"+t.osmId+"DataDiv")):this.#bt=null,this.#bt||(this.#bt=document.createElement("div"),this.#kt.appendChild(this.#bt),this.#bt.appendChild(this.#Tt),this.#Pt=document.createElement("div"),this.#bt.appendChild(this.#Pt),t&&(this.#bt.id="osm"+t.osmId,this.#Pt.id="osm"+t.osmId+"DataDiv"))}#Nt(t,e){return'<button title="download the gpx file" class="gpxButton" data-shape-pk="'+t+'" + data-file-name ="'+e+'" >Download gpx</button>'}#Lt(t){const e=new Date(t).toLocaleDateString().split("/");return e[2]+"-"+e[1]+"-"+e[0]}#jt(t,e){const r=d.getPlatform(e.platforms[0]),o=d.getPlatform(e.platforms.slice(-1)[0]);return s.vehicle.slice(0,1).toUpperCase()+s.vehicle.slice(1)+" "+t.ref+" - from "+r.nameOperator+" ("+r.gtfsRef+") to "+o.nameOperator+" ("+o.gtfsRef+") - "+e.shapePk+" - valid from "+this.#Lt(e.startDate)+" - valid to "+this.#Lt(e.endDate)}addWarning(t,e,r){this.add(t,e,r),this.#Tt.classList.add("isWarning")}addError(t,e,r){this.add(t,e,r),this.#Tt.classList.add("isError"),this.#Pt&&this.#Pt.classList.add("haveErrors"),this.#bt&&this.#bt.classList.add("haveErrors"),this.#kt&&this.#kt.classList.add("haveErrors")}add(t,e,r){switch(this.#Tt=document.createElement(t),t){case"h1":this.#xt(r);break;case"h2":this.#It(r);break;case"h3":case"p":this.#Pt&&this.#Pt.appendChild(this.#Tt)}this.#Tt.innerHTML=e+this.getOsmLink(r)+this.getJosmEdit(r)}addPartial(t,e,r){this.#St.match(/(🔵|🟡|🔴)(?!(⚪|⚫))/g)?this.addError(t,e,r):this.#St.match(/🟣(?!(⚪|⚫))/g)?this.addWarning(t,e,r):this.add(t,e,r)}addGpxRoute(t,e,r){this.#St=r;const s=this.#jt(t,e);r.match(/(🔵|🟡|🔴)(?!(⚪|⚫))/g)?this.addError("p",r+" "+s+" "+this.#Nt(e.shapePk,s)):r.match(/🟣(?!(⚪|⚫))/g)?this.addWarning("p",r+" "+s+" "+this.#Nt(e.shapePk,s)):this.add("p",r+" "+s+" "+this.#Nt(e.shapePk,s))}};class P{#Bt;#zt;#At;#Ft=[];#Ct=[];#Ht={};#Wt(){0!==this.#Ct.length&&(E.add("h2","Platform "+this.#zt.name,this.#zt,this.#Ht),this.#Ct.forEach(t=>{E.add(t.htmlTag,t.text)}))}#Ut(){const t=this.#At.nameOperator.replaceAll("´","'").replaceAll("  "," ");if(this.#zt.nameOperator){0!==this.#zt.nameOperator.replaceAll("´","'").localeCompare(t)&&(this.#Ct.push({htmlTag:"p",text:"Invalid name:operator:"+m.operator+" : "+this.#zt.nameOperator+": Expected : "+t}),u.addPlatformsErrorNameOperator())}else 0!==this.#zt.name.localeCompare(t,"fr",{sensitivity:"base",ignorePunctuation:!0})&&(this.#Ct.push({htmlTag:"p",text:"Invalid name or missing name:operator:"+m.operator+" : "+this.#zt.name+" name given by "+m.operator+" : "+t}),u.addPlatformsErrorName())}#Gt(){this.#zt.fixme&&(this.#Ct.push({htmlTag:"p",text:"A fixme exists for this platform:"+this.#zt.fixme}),u.addPlatformsWarningFixme())}#_t(){if(this.#Bt)return void this.#Ct.push({htmlTag:"p",text:"This platform have multiple ref:"+m.operator+"* in osm. Not possible to control the network tag"});let t=!1;const e=this.#At.network.split(";"),r=this.#zt.network?this.#zt.network.split(";"):[],s=[];if(e.forEach(e=>{-1===r.indexOf(e)&&(t=!0)}),r.forEach(r=>{-1===e.indexOf(r)&&(-1===this.#Ft.indexOf(r)?s.push(r):t=!0)}),t){const t=e.concat(s).sort((t,e)=>t.localeCompare(e)).toString().replaceAll(",",";");this.#Ct.push({htmlTag:"p",text:"Invalid network:"+this.#zt.network+": Expected : "+t}),u.addPlatformsErrorNetwork(),this.#Ht.network=t}}#Vt(){-1===(this.#zt.operator?this.#zt.operator.split(";"):[]).indexOf(m.operator)&&(this.#Ct.push({htmlTag:"p",text:"The operator tag ("+this.#zt.operator+") dont contains "+m.operator}),u.addPlatformsErrorOperator(),this.#Ht.operator=this.#zt.operator?this.#zt.operator.split(";").concat([m.operator]).sort((t,e)=>t.localeCompare(e)).toString().replaceAll(",",";"):m.operator)}#Jt(){this.#Bt?this.#Ct.push({htmlTag:"p",text:"This platform have multiple ref:"+m.operator+"* in osm. Not possible to control the route_ref:"+m.operator+"* tags"}):m.networks.forEach(t=>{this.#At.routeRefs[t.osmNetwork]!==this.#zt.routeRefs[t.osmNetwork]&&(this.#Ct.push({htmlTag:"p",text:"Invalid route_ref:"+t.osmNetwork+": Expected : "+(this.#At.routeRefs[t.osmNetwork]?this.#At.routeRefs[t.osmNetwork]:"nothing")+" but found "+(this.#zt?.routeRefs[t.osmNetwork]?this.#zt.routeRefs[t.osmNetwork]:"nothing")}),u.addPlatformsErrorNetwork(),this.#Ht["route_ref:"+t.osmNetwork]=this.#At.routeRefs[t.osmNetwork]?this.#At.routeRefs[t.osmNetwork]:"")})}#qt(){this.#At.zone!==this.#zt.zone&&(this.#Ct.push({htmlTag:"p",text:"Invalid zone:"+m.operator+" Expected : "+this.#At.zone+" but found "+(this.#zt?.zone?this.#zt.zone:"nothing")}),u.addPlatformsErrorZone(),this.#Ht["zone:"+m.osmOperator]=this.#At.zone)}validate(t,e){this.#zt=t,this.#At=e,this.#Bt=g.platformsWithMore1ref.get(this.#zt.osmId),this.#Ct=[],this.#Ht={},this.#Ut(),this.#Gt(),this.#_t(),this.#Vt(),this.#Jt(),this.#qt(),this.#Wt()}constructor(){m.networks.forEach(t=>{this.#Ft.push(t.osmNetwork)}),Object.freeze(this)}}class T{#Xt(){E.add("h1","Gtfs platforms not found in the osm data");let t=0;d.platforms.forEach(e=>{g.getPlatform(e.gtfsRef)||(E.add("p",e.gtfsRef+" "+e.nameOperator),t++)}),0===t&&E.add("p","Nothing found")}#Zt(){E.add("h1","Osm platforms not found in the gtfs data");let t=0;g.platforms.forEach(e=>{d.getPlatform(e.gtfsRef)||(E.add("p",e.gtfsRef+" "+e.name,{id:e.osmId,type:e.osmType}),t++)}),0===t&&E.add("p","Nothing found")}#Kt(){const t=m.networks.find(t=>t.osmNetwork===s.network)?.excludeList?.gtfs?.excludedPlatforms;t&&(E.add("h1","Excluded gtfs patforms"),t.forEach(t=>{E.add("p",t.ref+" "+t.name+" "+t.reason)}))}#Qt(){E.add("h1","Osm platforms with more than 1 ref"),g.platformsWithMore1ref.forEach(t=>{let e=t.name+" ";for(const[r,s]of Object.entries(t.osmRefs))e+=r+" : "+s+" ";E.add("p",e,{id:t.osmId,type:t.osmType})})}#Yt(){E.add("h1","Platforms validation"),g.platforms.forEach(t=>{const e=d.platforms.get(t.gtfsRef);e&&(new P).validate(t,e)})}compare(){""===s.ref?(this.#Kt(),this.#Xt(),this.#Zt(),this.#Qt(),this.#Yt()):E.add("h1","No Platforms comparison and validation when the control is limited to a specific route master")}constructor(){Object.freeze(this)}}class D{#$t(t){b.add("h1","Routes without route_master"),0===t.length?b.add("p","Nothing found"):t.forEach(t=>{b.add("p","Error M001: route wihout route_master "+(t.tags.name??"")+b.getOsmLink(t),{osmId:t.id,osmType:t.type}),u.addErrorRouteNoRouteMaster()})}async#K(t){return console.info("Warning: osm dev data are used"),console.info(t),(await(new h).loadData("./dataFiles/devData/routesMasterDevData-"+s.network.toUpperCase()+".json")).elements}async#Q(t){let e=null;return await fetch(t).then(t=>{if(t.ok)return t.json();console.error(String(t.status)+" "+t.statusText)}).then(t=>{e=t.elements}).catch(t=>{console.error(t)}),e}async fetchData(){const t='https://lz4.overpass-api.de/api/interpreter?data=[out:json][timeout:40];rel["network"="'+s.network+'"]["type"="route"]["route"="'+s.vehicle+'"]->.all;rel["route_master"="'+s.vehicle+'"](br.all);rel["route"="'+s.vehicle+'"](r)->.b;(.all; - .b; );out;';let e=null;e=new URL(window.location).searchParams.get("devData")?await this.#K(t):await this.#Q(t),this.#$t(e)}constructor(){Object.freeze(this)}}class S{#te;#ee=!1;#Ut(){if(this.#te.name||(b.addError("p","Error M008: no name tag for route_master"),u.addRouteMasterErrorName(),this.#ee=!0),this.#te.name&&this.#te.ref){const t=s.vehicle.substring(0,1).toUpperCase()+s.vehicle.substring(1);this.#te.name!==t+" "+this.#te.ref&&(b.addError("p",'Error M007: invalid name for route_master (expected "'+t+" "+this.#te.ref+'" but found "'+this.#te.name+'")'),u.addRouteMasterErrorName(),this.#ee=!0)}}#re(){this.#te.ref||(b.addError("p","Error M005: route_master without ref tag "),u.addRouteMasterErrorRefs(),this.#ee=!0)}#se(){this.#te.routes.forEach(t=>{this.#te.ref!==t.ref&&(b.addError("p",'Error M006: ref tag of the route master ("'+this.#te.ref+'") '+b.getOsmLink(this.#te)+b.getJosmEdit(this.#te)+' is not the same than the ref tag of the route ("'+t.ref+'") '+b.getOsmLink(t)+b.getJosmEdit(t)),u.addRouteMasterErrorSameRefs(),this.#ee=!0)})}#Gt(){const t=this.#te.fixme;t&&(b.addWarning("p","A fixme exists for this route master:"+t),u.addRouteMasterWarningFixme())}#Vt(){const t=this.#te.operator;t?-1===t.split(";").indexOf(m.osmOperator)&&(b.addError("p",'Error M012: Missing operator ( expected containing "'+m.osmOperator+'" but found "'+this.#te.operator+'")'),u.addRouteMasterErrorOperator(),this.#ee=!0):(b.addError("p",'Error M011: Oprator tag not found (expected to be "'+m.osmOperator+'")'),u.addRouteMasterErrorOperator(),this.#ee=!0)}validate(t){this.#te=t,b.add("h3","Validation of tags for route master"),this.#Vt(),this.#Gt(),this.#re(),this.#se(),this.#Ut(),this.#ee||b.add("p","No validation errors found for route_master")}constructor(){Object.freeze(this)}}class x{#oe=!1;#ae=!1;#mt;#ie(t){return t.nodes[0]===t.nodes.toReversed()[0]}#ne(t,e){return e.nodes[0]===t.nodes[0]||e.nodes[0]===t.nodes.toReversed()[0]||e.nodes.toReversed()[0]===t.nodes[0]||e.nodes.toReversed()[0]===t.nodes.toReversed()[0]}#he(t,e){return this.#ie(t)?-1!==t.nodes.indexOf(e.nodes[0])||-1!==t.nodes.indexOf(e.nodes.toReversed()[0]):!!this.#ie(e)&&(-1!==e.nodes.indexOf(t.nodes[0])||-1!==e.nodes.indexOf(t.nodes.toReversed()[0]))}#me(t){"construction"===t?.tags?.highway&&(b.addWarning("p","Warning R017: a road under construction is used as way for the route ",{osmId:t.id,osmType:t.type}),this.#oe=!0),-1===["motorway","motorway_link","trunk","trunk_link","primary","primary_link","secondary","secondary_link","tertiary","tertiary_link","service","residential","unclassified","living_street","busway","construction"].indexOf(t?.tags?.highway)&&"yes"!==t?.tags?.psv&&"yes"!==t?.tags[s.vehicle]&&(b.addError("p","Error R013: an invalid highway is used as way for the route ",{osmId:t?.id,osmType:t?.type}),this.#oe=!0)}#le(t){"tram"!==t?.tags?.railway&&(b.add("p","Error R014: an invalid railway is used as way for the route ",{osmId:t.id,osmType:t.type}),this.#oe=!0)}#de(t){"subway"!==t?.tags?.railway&&(b.add("p","Error R014: an invalid railway is used as way for the route ",{osmId:t.id,osmType:t.type}),this.#oe=!0)}#ce(t,e){return!(t&&!this.#ne(e,t)&&!this.#he(e,t))||(b.addError("p","Error R001: hole found for route "+b.getOsmLink(this.#mt)+" between way id "+b.getOsmLink({osmId:t.id,osmType:t.type})+" and way id "+b.getOsmLink({osmId:e.id,osmType:e.type})),this.#ae=!0,!1)}validate(){let t=null;return this.#mt.ways.forEach(e=>{switch(this.#ce(t,e)||(t=null),s.vehicle){case"bus":this.#me(e);break;case"tram":this.#le(e);break;case"subway":this.#de(e)}t=e}),this.#ae&&u.addRouteErrorHoles(),this.#oe&&u.addRouteErrorWays(),this.#oe||this.#ae}constructor(t){this.#mt=t,Object.freeze(this)}}class I{#ee=!1;#mt=null;#ue(){const t=g.getPlatform(this.#mt.platforms[0]);this.#mt.from&&this.#mt.from!==t?.name&&t?.nameOperator&&this.#mt.from.toLowerCase()!==t.nameOperator.toLowerCase()&&(b.addError("p","Error R003: the from tag is not equal to the name of the first platform for route "),this.#ee=!0)}#fe(){const t=g.getPlatform(this.#mt.platforms[this.#mt.platforms.length-1]);this.#mt.to&&this.#mt.to!==t?.name&&t?.nameOperator&&this.#mt.to.toLowerCase()!==t.nameOperator.toLowerCase()&&(b.addError("p","Error R005: the to tag is not equal to the name of the last platform for route"),this.#ee=!0)}#pe(){return this.#mt?.from&&this.#mt?.to&&this.#mt?.name&&this.#mt?.ref}#Ut(){let t=s.vehicle.substring(0,1).toUpperCase()+s.vehicle.substring(1);if(this.#pe()){let e=t+" "+this.#mt.ref+": "+this.#mt.from+" → "+this.#mt.to;this.#mt.name.replaceAll("=>","→")!==e&&(b.addError("p",'Error R006: Invalid name (expected "'+e+'" but found "'+this.#mt.name+'") for route ',this.#mt),this.#ee=!0)}}validate(){return this.#mt.from||(b.addError("p","Error R002: a from tag is not found for route"),this.#ee=!0),this.#mt.to||(b.addError("p","Error R004: a to tag is not found for route"),this.#ee=!0),this.#mt.ref||(b.addError("p","Error R020: a ref tag is not found for route"),this.#ee=!0),this.#mt.name||(b.addError("p","Error R021: a name tag is not found for route"),this.#ee=!0),this.#ue(),this.#fe(),this.#Ut(),this.#ee&&u.addRouteErrorFromToRefName(),this.#ee}constructor(t){this.#mt=t,Object.freeze(this)}}class N{#mt;#ee=!1;#Gt(){const t=this.#mt.fixme;t&&(b.addWarning("p","Warning R019: A fixme exists for this route:"+t),u.addRouteWarningFixme())}#Vt(){const t=this.#mt.operator;t?-1===t.split(";").indexOf(m.osmOperator)&&(b.addError("p",'Error R023: Missing operator ( expected containing "'+m.osmOperator+'" but found "'+this.#mt.operator+'")'),u.addRouteMasterErrorOperator(),this.#ee=!0):(b.addError("p",'Error R022: Oprator tag not found (expected to be "'+m.osmOperator+'")'),u.addRouteErrorOperator(),this.#ee=!0)}validate(t){this.#mt=t,b.add("h3","Validation of tags, roles and members for route"),this.#Vt(),this.#Gt(),this.#ee=new x(this.#mt).validate()||this.#ee,this.#ee=new I(this.#mt).validate()||this.#ee,this.#ee||b.add("p","No validation errors found for route")}constructor(){Object.freeze(this)}}class L{static get haveSamePlatforms(){return 3}static get haveSameFromToPlatforms(){return 2}static get haveSimilarFromToPlatforms(){return 1}static get haveDifferentPlatforms(){return 0}}class j{shapePk=0;matchScore=0;constructor(t,e){this.shapePk=t,this.matchScore=e,Object.freeze(this)}}class B{#ge=[];#M;get osmId(){return this.#M}filter(t){return this.#ge.filter(e=>t===e.matchScore)}freeze(){Object.freeze(this.#ge)}addMatchScore(t){this.#ge.push(t)}constructor(t){this.#M=t,Object.freeze(this)}}class z{#we={};#ve=new Map;get matchedGtfsRoutes(){return this.#ve}#Ee(t,e){if(t===e)return!0;const r=g.getPlatform(t)?.osmId,s=g.getPlatform(e)?.osmId;return r&&s&&r===s}#Re(t,e){let r=t.platforms.toString()===e.platforms.toString();if(!r&&t.platforms.length===e.platforms.length){r=!0;for(let s=0;s<t.platforms.length;s++)r=r&&this.#Ee(t.platforms[s],e.platforms[s])}return r}#ye(t,e){return this.#Ee(t.platforms[0],e.platforms[0])&&this.#Ee(t.platforms[t.platforms.length-1],e.platforms[e.platforms.length-1])}#Me(t,e){return t.substring(t.length-1,0)===e.substring(e.length-1,0)}#Oe(t,e){return this.#Me(t.platforms[0],e.platforms[0])&&this.#Me(t.platforms[t.platforms.length-1],e.platforms[e.platforms.length-1])}#ke(t,e){return this.#Re(t,e)?(this.#ve.set(e.shapePk,e.shapePk),L.haveSamePlatforms):this.#ye(t,e)?(this.#ve.set(e.shapePk,e.shapePk),L.haveSameFromToPlatforms):this.#Oe(t,e)?(this.#ve.set(e.shapePk,e.shapePk),L.haveSimilarFromToPlatforms):L.haveDifferentPlatforms}getMatchScoresSamePlatforms(t){return this.#we[t.osmId].filter(L.haveSamePlatforms)}getMatchScoresSameFromEndPlatforms(t){return this.#we[t.osmId].filter(L.haveSameFromToPlatforms)}getMatchScoresSimilarFromEndPlatforms(t){return this.#we[t.osmId].filter(L.haveSimilarFromToPlatforms)}build(t,e){e.routes.forEach(e=>{const r=new B(e.osmId);t.routes.forEach(t=>{r.addMatchScore(new j(t.shapePk,this.#ke(e,t)))}),r.freeze(),this.#we[e.osmId]=r}),Object.freeze(this.#we),Object.freeze(this.#ve)}}class A{#be;#Pe;#we;#Te(t){let e=[];const r=g.getPlatform(t)?.osmRefs;return r&&Object.values(r).forEach(t=>{e=e.concat(t.split(";"))}),e}#De(t,e){const r=[],s=[];t.platforms.forEach(t=>{let s=!1;this.#Te(t).forEach(t=>{s||=e.platforms.includes(t)}),s||r.push(t)}),e.platforms.forEach(e=>{let r=!1;this.#Te(e).forEach(e=>{r||=t.platforms.includes(e)}),r||s.push(e)});let o="Osm platforms to remove: ";r.forEach(t=>{o+=(g.getPlatform(t)?.name??"???")+" ("+t+"),"});let a="gtfs platforms to add: ";s.forEach(t=>{a+=(d.getPlatform(t)?.nameOperator??"???")+" ("+t+"),"}),b.addPartial("p",a),b.addPartial("p",o),0===r.length&&0===s.length&&b.addPartial("p","Verify the order of the platforms and the duplicate platforms")}#Se(t,e){let r="🔴";return e.matchScore===L.haveSamePlatforms?r="🟢":e.matchScore===L.haveSameFromToPlatforms?r="🔵":e.matchScore===L.haveSimilarFromToPlatforms&&(r="🟡"),new Date(t.startDate).valueOf()>Date.now()?r+="⚪":new Date(t.endDate).valueOf()<Date.now()&&(r+="⚫"),r}#xe(t,e){t.forEach(t=>{const r=this.#be.routes.find(e=>e.shapePk===t.shapePk);b.addGpxRoute(this.#be,r,this.#Se(r,t)),e&&this.#De(e,this.#be.routes.find(e=>e.shapePk===t.shapePk))})}#Ie(t){b.add("h3","GTFS comparison results for route: "+(1===t.length?"a gtfs route with all platforms found":"multiple gtfs routes with all platforms found")),this.#xe(t),u.addRouteDoneOk()}#Ne(t,e){b.add("h3","GTFS comparison results for route: "+(1===t.length?"a gtfs route with from and to platforms found":"multiple gtfs routes with from and to platforms found")),this.#xe(t,e),u.addRouteDoneError()}#Le(t,e){b.add("h3","GTFS comparison results for route: "+(1===t.length?"a gtfs route with similar from and to platforms found":"multiple gtfs routes with similar from and to platforms found")),this.#xe(t,e),u.addRouteDoneError()}#je(){this.#Pe.routes.forEach(t=>{b.add("h2","Route : "+t.name,t),(new N).validate(t);const e=this.#we.getMatchScoresSamePlatforms(t),r=this.#we.getMatchScoresSameFromEndPlatforms(t),s=this.#we.getMatchScoresSimilarFromEndPlatforms(t);0!==e.length?this.#Ie(e):0!==r.length?this.#Ne(r,t):0===s.length?(b.add("h3","GTFS comparison results for route"),b.addError("p","🔴 No gtfs route found"),u.addRouteDoneNoGtfs()):this.#Le(s,t)})}#Be(){return(this.#Pe.description??"").toLowerCase().replaceAll(" ","")!==(this.#be.description??"").toLowerCase().replaceAll(" ","")?(b.addError("p",'Error M009: the osm description of the route_master is not equal to the GTFS route long name (expected "'+this.#be.description+'" but found "'+this.#Pe.description+'")'),u.addRouteMasterErrorDescription(),!1):(b.add("p","No validation errors found for route_master"),!0)}#ze(){this.#we.matchedGtfsRoutes.size!==this.#be.routes.length&&(b.add("h2","gtfs routes not found in the osm data"),this.#be.routes.forEach(t=>{if(!this.#we.matchedGtfsRoutes.get(t.shapePk)){const e=[];this.#Pe.routes.forEach(r=>{r.platforms.toString().match(t.platforms.toString())&&e.push([t,r])});let r=0===e.length?"🔴":"🟣";new Date(t.startDate).valueOf()>Date.now()?r+="⚪":new Date(t.endDate).valueOf()<Date.now()&&(r+="⚫"),b.addGpxRoute(this.#be,t,r),e.forEach(t=>{b.addPartial("p","This route is a part of "+t[1].name,t[1])})}}))}compare(t,e){this.#be=t,this.#Pe=e,this.#we=new z,this.#we.build(this.#be,e),b.add("h3","GTFS comparison results for route_master"),this.#Be(),this.#je(),this.#ze()}constructor(){}}class F{#Ae=[];#Fe=[];#Ce(t,e,r){let s=null,o=t.routesMaster.filter(t=>e.ref===t.ref);switch(o.length){case 0:r.push(e);break;case 1:s=o[0];break;default:o=t.routesMaster.filter(t=>e.ref===t.ref&&t.description&&e.description&&0===e.description.toLowerCase().localeCompare(t.description.toLowerCase())),1===o.length?s=o[0]:r.push(e)}return s}#He(){n.routesMaster.forEach(t=>{const e=this.#Ce(p,t,this.#Ae);e&&(b.add("h1","Route master : "+s.vehicle.slice(0,1).toUpperCase()+s.vehicle.slice(1)+" "+(e.ref??"")+" "+(e.description??"")+" ",e),(new S).validate(e),(new A).compare(t,e))})}#We(){p.routesMaster.forEach(t=>{this.#Ce(n,t,this.#Fe)})}#Ue(){b.add("h1","gtfs routes master without osm routes master"),0===this.#Ae.length?b.add("p","nothing found"):this.#Ae.forEach(t=>{b.add("h2","gtfs route : "+s.vehicle.slice(0,1).toUpperCase()+s.vehicle.slice(1)+" "+t.ref+" "+t.description),t.routes.forEach(e=>{b.addGpxRoute(t,e,"🔴"),u.addRouteToDo()})})}#Ge(){b.add("h1","Osm routes master not found in the gtfs data"),0===this.#Fe.length?b.add("p","nothing found"):this.#Fe.forEach(t=>{b.addError("p","Error M10: An unknown osm route master is found: "+(t.ref??"")+" "+(t.description??""),t),u.addRouteMasterErrorIsUnknown()})}compare(){this.#He(),this.#We(),s.ref||(this.#Ue(),this.#Ge())}constructor(){Object.freeze(this)}}class C{constructor(){Object.freeze(this)}async start(){document.getElementById("errorsOnlyInput").value="Errors only",s.loadData(),E.open(),b.open(),u.open(),await(new f).loadData(),await(new v).fetchData(),await(new D).fetchData(),(new F).compare(),(new T).compare(),E.close(),b.close(),u.close()}}class H{constructor(){Object.freeze(this)}async handleEvent(){await(new C).start()}}class W{constructor(){Object.freeze(this)}async handleEvent(t){const e=t.target.value;await m.loadData("./dataFiles/operators/"+e+".json");const r=Array.from(m.networks,t=>t.osmNetwork).sort((t,e)=>t.localeCompare(e)),s=document.getElementById("osmNetworkSelect");s.options.length=0,r.forEach(t=>{const e=document.createElement("option");e.text=t,s.options.add(e)})}}class U{#h=null;#m=null;#l=null;#_e=null;#Ve(){const t=new URL(window.location);this.#h=t.searchParams.get("operator")||"TEC",this.#m=t.searchParams.get("network")||"TECL",this.#l=t.searchParams.get("vehicle")||"bus",this.#_e=t.searchParams.get("autostartup"),this.#h=this.#h.toUpperCase(),this.#m=this.#m.toUpperCase(),this.#l=this.#l.toLowerCase()}async#Vt(){return!!await m.loadData("./dataFiles/operators/"+this.#h+".json")||(alert("Unknown operator parameter "+this.#h),!1)}#_t(){return this.#m?!!m.networks.find(t=>this.#m===t.osmNetwork)||(alert("Unknown network parameter: "+this.#m),!1):(null!==this.#_e&&alert('Autostartup is enabled but the "network" url parameter is not present'),!1)}#Je(){return this.#l?-1!==["bus","tram","subway"].indexOf(this.#l)||(alert('bad value for vehicle parameter : "'+this.#l+'". Must be "bus", "tram" or "subway"'),!1):(null!==this.#_e&&alert('Autostartup is enabled but the "vehicle" url parameter is not present'),!1)}#qe(){const t=document.getElementById("osmNetworkSelect");m.networks.forEach(e=>{const r=document.createElement("option");r.text=e.osmNetwork,t.appendChild(r)})}#Xe(){document.getElementById("osmNetworkSelect").value=this.#m}#Ze(){document.getElementById("osmVehicleSelect").value=this.#l}async start(){this.#Ve(),await this.#Vt()&&(this.#qe(),this.#_t()&&this.#Xe(),this.#Je()&&(this.#Ze(),null!==this.#_e&&(new C).start()))}constructor(){Object.freeze(this)}}class G{constructor(){Object.freeze(this)}handleEvent(t){t.target.value="All"===t.target.value?"Error only":"All",document.getElementById("relationsPane").classList.toggle("errorsOnly")}}class _{#Ke;static#Qe=[];#Ye;static#$e=[];constructor(t,e){this.#Ke=t,this.#Ye=e,_.#Qe.push(t),_.#$e.push(e),Object.freeze(this)}handleEvent(){_.#Qe.forEach(t=>document.getElementById(t).classList.remove("selectedPaneButton")),document.getElementById(this.#Ke).classList.add("selectedPaneButton"),_.#$e.forEach(t=>document.getElementById(t).classList.add("hiddenPane")),document.getElementById(this.#Ye).classList.remove("hiddenPane"),"relationsButton"===this.#Ke?document.getElementById("routesLinks").classList.remove("hiddenPane"):document.getElementById("routesLinks").classList.add("hiddenPane")}}(new class{constructor(){Object.freeze(this)}start(){document.getElementById("osmOperatorSelect").addEventListener("change",new W,!1),document.getElementById("goInput").addEventListener("click",new H,!1),document.getElementById("errorsOnlyInput").addEventListener("click",new G,!1),document.getElementById("relationsButton").addEventListener("click",new _("relationsButton","relationsPane"),!1),document.getElementById("platformsButton").addEventListener("click",new _("platformsButton","platformsPane"),!1),document.getElementById("statsButton").addEventListener("click",new _("statsButton","statsPane"),!1),document.getElementById("version").innerText="Version: v3.0.0",(new U).start()}}).start()}();